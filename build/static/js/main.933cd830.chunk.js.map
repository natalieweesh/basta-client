{"version":3,"sources":["components/Game/Game.js","components/Rules/Rules.js","components/Join/Join.js","components/TextContainer/TextContainer.js","App.js","index.js"],"names":["socket","Rules","className","Join","useState","name","setName","room","setRoom","modal","setModal","placeholder","type","onChange","event","target","value","onClick","preventDefault","to","e","TextContainer","currentRound","totalRounds","users","game","finishedGame","length","find","g","submitted","steps","map","user","c","currentTurnIndex","orderIndex","key","readyToPlay","readyToRestart","Game","location","setUsers","currentGame","setCurrentGame","setFinishedGame","poop","setPoop","letter","setLetter","ENDPOINT","useEffect","queryString","parse","search","io","trim","toLowerCase","emit","window","href","alert","off","on","reconnectFrontEnd","connect","document","removeEventListener","reconnectFrontEndVisible","addEventListener","visibilityState","split","disabled","console","log","scores","score","i","userId","answers","ans","u","toUpperCase","a","scoreTabulation","previousAnswers","previousLetters","n","userIndex","categoryIndex","text","confirm","App","path","exact","component","ReactDOM","render","querySelector"],"mappings":"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","file":"static/js/main.933cd830.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport queryString from 'query-string';\nimport io from 'socket.io-client'\nimport Rules from '../Rules/Rules';\nimport TextContainer from '../TextContainer/TextContainer';\nimport './Game.css';\n\nlet socket;\n\nconst Game = ({ location }) => {\n  const [name, setName] = useState('');\n  const [room, setRoom] = useState('');\n  const [prevmessages, setPrevMessages] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [currentGame, setCurrentGame] = useState([]);\n  const [finishedGame, setFinishedGame] = useState(false)\n  const [poop, setPoop] = useState(false);\n  const [letter, setLetter] = useState('');\n  const [modal, setModal] = useState('');\n\n  // TODO: change this for prod / dev\n  // const ENDPOINT = 'localhost:5000';\n  const ENDPOINT = 'https://basta-game.herokuapp.com/';\n\n  useEffect(() => {\n    const { name, room } = queryString.parse(location.search);\n\n    socket = io(ENDPOINT);\n\n    setName(name.trim().toLowerCase());\n    setRoom(room.trim().toLowerCase());\n\n    socket.emit('join', { name, room }, ((e) => {\n      if (e) {\n        window.location.href='/';\n        alert(e)\n      }\n    }));\n\n    return () => {\n      socket.emit('disconnect');\n\n      socket.off();\n    }\n\n  }, [ENDPOINT, location.search]);\n\n  useEffect(() => {\n    socket.off('roomData').on('roomData', ({ users }) => {\n      // console.log('Room Data', users)\n      setUsers(users);\n    })\n    socket.off('gameStatus').on('gameStatus', ({ game }) => {\n      if (game && game.letter !== letter) {\n        setLetter(letter);\n      }\n\n     if (currentGame.length === 0 && !!game) {\n      //  console.log('currentGame', game)\n        setCurrentGame(game);\n        setFinishedGame(game.finishedGame)\n      }\n    })\n    socket.off('gameRestarted').on('gameRestarted', ({ users }) => {\n      setFinishedGame(false)\n      setUsers(users);\n      setCurrentGame([])\n    }\n )}, [])\n\n  useEffect(() => {\n    socket.off('disconnect').on('disconnect', () => {\n      setPoop(true);\n      const reconnectFrontEnd = () => {\n        const { name, room } = queryString.parse(location.search);\n        socket.connect()\n        socket.emit('frontEndReconnect', {name, room}, () => {\n        })\n        socket.emit('join', { name, room }, ((e) => {\n          if (e) {\n            window.location.href='/';\n            alert(e)\n          }\n        }));\n        document.removeEventListener('click', reconnectFrontEnd)\n        document.removeEventListener('visibilitychange', reconnectFrontEndVisible);\n      }\n      document.addEventListener('click', reconnectFrontEnd)\n\n      const reconnectFrontEndVisible = () => {\n        const { name, room } = queryString.parse(location.search);\n        if (document.visibilityState && document.visibilityState === 'visible') {\n          socket.connect()\n          socket.emit('frontEndReconnect', {name, room}, () => {\n          })\n          socket.emit('join', { name, room }, ((e) => {\n            if (e) {\n              window.location.href='/';\n              alert(e)\n            }\n            document.removeEventListener('visibilitychange', reconnectFrontEndVisible);\n          })); \n          document.removeEventListener('visibilitychange', reconnectFrontEndVisible);\n          document.removeEventListener('click', reconnectFrontEnd)\n        }\n      }\n      document.addEventListener('visibilitychange', reconnectFrontEndVisible)\n    })\n  })\n  useEffect(() => {\n    socket.off('startGame').on('startGame', ({ users }) => {\n      socket.emit('initiateGame', () => {\n        socket.emit('fetchGame', () => {\n        })\n      })\n    })\n  }, [currentGame, setCurrentGame])\n\n\n  const updateUserStatus = (event) => {\n    event.preventDefault();\n\n    socket.emit('setReadyToPlay', () => {\n    })\n  }\n\n  const userRestart = (event) => {\n    event.preventDefault();\n\n    socket.emit('setReadyToRestart', () => {\n    })\n  }\n\n  const user = users.find((user) => user.name === name);\n\n  return (\n    <div className={`player-${user?.orderIndex} outerContainer ${currentGame.finishedGame && 'revealAll'} ${!currentGame.split && 'notSplit'}`}>\n      <div className=\"topPart\">\n      <div className=\"sideContainer\">\n        {poop ? <div className=\"modal\"><div className=\"attentionModal\">Hey! Pay attention to the game!<button className=\"button\" onClick={() => {setPoop(false)}}>Ok</button></div></div> : null}\n        <div className=\"users-list\">          {(currentGame.length === 0 || finishedGame) && <TextContainer users={users} user={user} game={currentGame} finishedGame={finishedGame} />}\n          {currentGame.length === 0 && users.length > 1 && <button className=\"startButton\" disabled={user?.readyToPlay} onClick={updateUserStatus}>{user?.readyToPlay ? 'Waiting for other players' : 'Ready to play!'}</button>}\n          {finishedGame && <div><button className=\"startButton\" disabled={user?.readyToRestart} onClick={userRestart}>{user?.readyToRestart ? 'Waiting for other players' : 'Play again!'}</button></div>}\n        </div>\n        {currentGame.length !== 0 && !finishedGame && <>\n          <p>Pick a letter to start! 👉👉👉</p>\n          <input className=\"letterInput\" type=\"text\" value={currentGame.letter} onChange={(e) => {\n            console.log(e.target.value)\n            socket.emit('changeLetter', {letter: e.target.value}, () => {\n              console.log('donezo')\n            })\n          }}/>\n          </>\n        }\n        <button className=\"rulesButton\" onClick={() => setModal('rules')}>🤓 Check the rule book 🤓</button>\n        {modal && <div className=\"modal\">\n          <button className=\"button closeModal\" onClick={(e) => {\n            e.preventDefault();\n            setModal('');\n          }}>X</button>\n          {modal === 'rules' && <Rules />}\n          \n        </div>}\n      </div>\n        <div className=\"rightTopSquare instructions\">\n        {\n          currentGame && currentGame.scores && <>\n            <p className=\"bold\">🤗 Scoreboard! 🤗</p>\n            {currentGame.scores.map((score, i) => {\n              return <div><label>{users[i]['name']}: &nbsp;</label><input onChange={(e) => {\n                socket.emit('updateScore', {userId: i, score: e.target.value}, () => {})\n              }} type=\"number\" value={score}/></div>\n            })}\n          </>}\n        </div>\n      </div>\n      \n      {currentGame.length !== 0 && currentGame.finishedGame && (\n        <div>\n        <table>\n        <tr><td>🙋‍♀️ Player 🙋‍♂️</td><td>🔠 Letra 🔡</td><td>🦓 Animal 🐕</td><td>🧦 Cosa 🛵</td><td>🌮 Comida 🍩</td><td>🤾‍♀️ Acción 🏃‍♂️</td><td>🗼 Lugar 🏘</td><td> 💸Puntas 💸</td></tr>\n          {currentGame.answers.map((ans, i) => {\n            return <tr>\n            <td>{users.find((u) => u.orderIndex === i).name}</td>\n            <td>{currentGame.letter.toUpperCase()}</td>\n              {ans.map((a) => {\n                return <td>{a}</td>\n              })}\n              <td>{currentGame.scoreTabulation[i]}</td>\n\n            </tr>\n          })}\n        </table>\n        </div>\n      )}\n\n      {currentGame.length !== 0 && !currentGame.finishedGame && (\n        <div>\n          <table>\n            <tr><td>🔠 Letra 🔡</td><td>🦓 Animal 🐕</td><td>🧦 Cosa 🛵</td><td>🌮 Comida 🍩</td><td>🤾‍♀️ Acción 🏃‍♂️</td><td>🗼 Lugar 🏘</td></tr>\n            {currentGame.previousAnswers.length > 0 && \n              currentGame.previousAnswers.map((ans, i) => {\n                return <tr>\n                <td>{currentGame.previousLetters[i]}</td>\n                {[0,1,2,3,4].map((n) => {\n                  return <td>{ans[user.orderIndex][n]}</td>\n                })}\n                </tr>\n              })\n            }\n            <tr>\n              <td><p>{currentGame.letter}</p></td>\n              {[0, 1, 2, 3, 4].map((n) => {\n                return <td><input type=\"text\" value={currentGame.answers[user.orderIndex][n]} onChange={(e) => {\n                  socket.emit('updateAnswer', {userIndex: user.orderIndex, categoryIndex: n, text: e.target.value})\n                }} /></td>\n              })}\n            </tr>\n            <tr className=\"lastRow\">\n              <td></td><td></td><td></td><td></td><td></td>\n              <td>\n                <button className=\"endGame\" onClick={() => {\n                  const endIt = window.confirm('Are you sure you\\'re done?');\n                  if (endIt) {\n                    socket.emit('endGame', () => {\n                      // console.log('now show all tiles')\n                    })\n                  }\n                }}>¡BASTA!</button>\n              </td>\n            </tr>\n          </table>\n        </div>\n      )}\n    </div>\n  )   \n}\n\nexport default Game;","import React from 'react';\nimport './Rules.css';\n\nconst Rules = () => {\n  \n  return (\n    <div className=\"instructions\">\n      <h3>🤓 How to play! 📓</h3>\n      <p>First, you need to pick a letter! One person should start saying the alphabet really quickly and someone else stops them by saying \"Basta\"!</p>\n      <p>Now someone should enter the selected letter in the top left of the screen</p>\n      <p>Now that you have a letter, everyone should think of a word for each category in the table that starts with that letter</p>\n      <p>Once you finish writing your words, say \"Basta\" and click the \"Basta\" button</p>\n      <p>When the first person says \"Basta\" that means everyone else has to stop where they are</p>\n      <p>Everyone can compare the words they have for each category and calculate their score</p>\n      <p>If you have a word that no one else, you get 10 points</p>\n      <p>If you have a word that someone else also has, you get 5 points</p>\n      <p>If you didn't fill out a word, or chose a word that starts with the wrong letter, you get 0 points</p>\n      <p>Tally your scores in the scoreboard, and play another round!</p>\n    </div>\n  )\n};\n\nexport default Rules;","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport Rules from '../Rules/Rules';\nimport './Join.css';\n\nconst Join = () => {\n  const [name, setName] = useState('');\n  const [room, setRoom] = useState('');\n  const [modal, setModal] = useState('');\n\n  return (\n    <div className=\"joinOuterContainer\">\n      <div className=\"joinInnerContainer\">\n        <h1 className=\"heading\">¡ Basta !</h1>\n        <form>\n        <div><input className=\"joinInput\" placeholder=\"Name\" type=\"text\" onChange={(event) => setName(event.target.value)} /></div>\n        <div><input className=\"joinInput mt-20\" placeholder=\"Room\" type=\"text\" onChange={(event) => setRoom(event.target.value)} /></div>\n        <Link onClick={event => (!name || !room) ? event.preventDefault() : null} to={`/game?name=${name}&room=${room}`}>\n          <button className=\"button fancy yellow mt-20\" type=\"submit\">🤪 Sign In 🥳</button>\n        </Link>\n        <div className=\"extraButtonsRow mt-20\">\n          <button className=\"button fancy\" onClick={(e) => {\n            e.preventDefault();\n            setModal('rules')\n          }}>🧐 How to play 🤔</button>\n        </div>\n        </form>\n      </div>\n      {modal && <div className=\"modal\">\n        <button className=\"button closeModal\" onClick={(e) => {\n          e.preventDefault();\n          setModal('');\n        }}>X</button>\n        {modal === 'rules' && <Rules />}\n      </div>}\n    </div>\n  )   \n}\n\nexport default Join;","import React from 'react';\n\nimport './TextContainer.css';\n\nconst TextContainer = ({ users, game, finishedGame }) => {\n  let currentRound, totalRounds, gameOver;\n  if (game.length > 0) {\n    totalRounds = game.length;\n    if (game.find((g) => !g.submitted)) {\n      currentRound = game.find((g) => !g.submitted).steps.length + 1\n    }\n  }\n  return (\n    <div className=\"textContainer\">\n      {\n        users\n          ? (\n            <div>\n              <p>{currentRound && totalRounds && `Round ${currentRound} of ${totalRounds}`}</p>\n              <p>{game.length > 0 && finishedGame && \"Game over\"}</p>\n              {game.length > 0 ? (finishedGame ? \"Play again?\" : \"Submitted?\") : \"Players in the room:\"}\n              <div className=\"activeContainer\">\n                {users.map((user) => {\n                  let card;\n                  if (game.length) {\n                    card = game.find((c) => c.currentTurnIndex == user.orderIndex)\n                  }\n                  return <div key={user.name} className=\"activeItem\">\n                    <div>{user.name}</div>\n                    {((game.length === 0 && user.readyToPlay) || (finishedGame && user.readyToRestart)) && <div className=\"greenDot\"></div>}\n                  </div>\n                })}\n              </div>\n            </div>\n          )\n          : null\n      }\n    </div>\n  );\n}\n\n\nexport default TextContainer;","import React from 'react';\n\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nimport Join from './components/Join/Join';\nimport Game from './components/Game/Game';\n\nconst App = () => (\n  <Router>\n    <Route path=\"/\" exact component={Join} />\n    <Route path=\"/game\" exact component={Game} />\n  </Router>\n);\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import * as Sentry from '@sentry/react';\nimport App from './App';\n\n// Sentry.init({dsn: \"https://77d30d679de84c36b37ed3775462f569@o422420.ingest.sentry.io/5348482\"});\n\nReactDOM.render(<App />, document.querySelector('#root'));"],"sourceRoot":""}